#!/usr/bin/env bash

# More info: https://www.hardscrabble.net/2015/improved-commit-squashing
function abortIfNotGitRepo {
  if [[ ! -d .git ]]; then
    echo "Not a git repo! Get out of here!"
    exit 1
  fi
}

function abortIfMidCherryPick {
  if [[ -e .git/CHERRY_PICK_HEAD ]]; then
    echo "I don't want to fib right now, you're in the middle of a cherry-pick"
    exit 1
  fi
}

function abortIfMidRebase {
  if [[ -e .git/rebase-apply ]]; then
    echo "I don't want to fib right now, you're mid rebase"
    exit 1
  fi
}

# via http://0xfe.blogspot.com/2010/04/adding-git-status-information-to-your.html
function abortIfThereAreUncommittedChanges {
  if [[ $(git diff HEAD --shortstat 2> /dev/null | tail -n1) != "" ]]; then
    echo "I don't want to fib right now, you have uncommited work"
    exit 1
  fi
}

# the gitFib function does the work of git fibbing
function gitFib {
  # check a few things
  abortIfNotGitRepo
  abortIfMidCherryPick
  abortIfMidRebase
  abortIfThereAreUncommittedChanges

  # Amend the last commit's timestamp to right now
  git commit --no-edit --amend --date="$(date -R)"
}

# call the function and do the thing!
gitFib
