#!/usr/bin/env ruby

require 'json'
require 'time'

class Login
  SKIPPERS = [
    "cce-unstable",
    "destroy all software",
    "fastmail",
  ].freeze

  def initialize(name:, username:, password:, created_at:, updated_at:)
    @name = name
    @username = username
    @password = password
    @created_at = Time.at(created_at)
    @updated_at = Time.at(updated_at)
  end

  def insecure?
    return false if SKIPPERS.include?(@name)
    @updated_at < threshold
  end

  def to_s
    "#{@name} (#{pretty_updated_at})"
  end

  private

  def threshold
    second = 1
    minute = second * 60
    hour = minute * 60
    day = hour * 24
    month = day * 31
    Time.now - (6 * month)
  end

  def pretty_updated_at
    diff = Time.now - updated_at
    days = diff / 60 / 60 / 24.0
    "#{days.floor} days"
  end

  def <=>(other)
    updated_at <=> other.updated_at
  end

  protected

  attr_reader :updated_at
end

logins =
  begin
    JSON.parse(`rooster export`).map { |login|
      Login.new(
        name: login.fetch("name"),
        username: login.fetch("username"),
        password: login.fetch("username"),
        created_at: login.fetch("created_at"),
        updated_at: login.fetch("updated_at"),
      )
    }
  rescue JSON::ParserError
    exit 1
  rescue Interrupt
    exit 1
  end

logins.select(&:insecure?).sort.each do |login|
  puts login
end
